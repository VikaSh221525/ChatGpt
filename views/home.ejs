<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>AI Assistant</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            darkMode: "class",
        };
    </script>
    <style>
        .sidebar-transition {
            transition: transform 0.3s ease-in-out;
        }

        .message-animation {
            animation: fadeInUp 0.5s ease-out;
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .typing-indicator {
            display: inline-block;
            width: 8px;
            height: 8px;
            border-radius: 50%;
            background-color: #6b7280;
            animation: typing 1.4s infinite ease-in-out;
        }

        .typing-indicator:nth-child(1) {
            animation-delay: -0.32s;
        }

        .typing-indicator:nth-child(2) {
            animation-delay: -0.16s;
        }

        @keyframes typing {

            0%,
            80%,
            100% {
                transform: scale(0);
                opacity: 0.5;
            }

            40% {
                transform: scale(1);
                opacity: 1;
            }
        }

        .gradient-text {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .chat-input:focus {
            box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.3);
        }

        .scrollbar-hide {
            -ms-overflow-style: none;
            scrollbar-width: none;
        }

        .scrollbar-hide::-webkit-scrollbar {
            display: none;
        }
    </style>
</head>

<body class="bg-gray-50 dark:bg-gray-900 transition-colors duration-300">
    <!-- Mobile menu overlay -->
    <div id="mobile-overlay" class="fixed inset-0 bg-black bg-opacity-50 z-40 hidden lg:hidden"></div>

    <!-- Sidebar -->
    <div id="sidebar"
        class="fixed left-0 top-0 h-full w-64 bg-white dark:bg-gray-800 border-r border-gray-200 dark:border-gray-700 transform -translate-x-full lg:translate-x-0 sidebar-transition z-50">
        <!-- Sidebar Header -->
        <div class="flex items-center justify-between p-4 border-b border-gray-200 dark:border-gray-700">
            <div class="flex items-center space-x-2">
                <div
                    class="w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-600 rounded-lg flex items-center justify-center">
                    <svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z">
                        </path>
                    </svg>
                </div>
                <span class="font-semibold text-gray-900 dark:text-white">AI Assistant</span>
            </div>
            <button id="close-sidebar" class="lg:hidden p-1 rounded-md hover:bg-gray-100 dark:hover:bg-gray-700">
                <svg class="w-5 h-5 text-gray-500 dark:text-gray-400" fill="none" stroke="currentColor"
                    viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12">
                    </path>
                </svg>
            </button>
        </div>

        <!-- New Chat Button -->
        <div class="p-4">
            <button id="new-chat-btn"
                class="w-full flex items-center space-x-3 px-4 py-3 bg-gradient-to-r from-blue-500 to-purple-600 text-white rounded-lg hover:from-blue-600 hover:to-purple-700 transition-all duration-200 transform hover:scale-105">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
                </svg>
                <span class="font-medium">New Chat</span>
            </button>
        </div>

        <!-- Chat History -->
        <div class="flex-1 overflow-y-auto scrollbar-hide">
            <div class="px-4 pb-4">
                <h3 class="text-xs font-semibold text-gray-500 dark:text-gray-400 uppercase tracking-wider mb-3">
                    Recent Chats
                </h3>
                <div id="chat-history" class="space-y-2">
                    <!-- Chat history items will be populated here -->
                    <div
                        class="chat-item flex items-center space-x-3 px-3 py-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 cursor-pointer group">
                        <svg class="w-4 h-4 text-gray-400 dark:text-gray-500" fill="none" stroke="currentColor"
                            viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z">
                            </path>
                        </svg>
                        <span class="text-sm text-gray-700 dark:text-gray-300 truncate flex-1">Machine Learning
                            Basics</span>
                        <button
                            class="opacity-0 group-hover:opacity-100 p-1 hover:bg-gray-200 dark:hover:bg-gray-600 rounded">
                            <svg class="w-3 h-3 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16">
                                </path>
                            </svg>
                        </button>
                    </div>

                    <div
                        class="chat-item flex items-center space-x-3 px-3 py-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 cursor-pointer group">
                        <svg class="w-4 h-4 text-gray-400 dark:text-gray-500" fill="none" stroke="currentColor"
                            viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z">
                            </path>
                        </svg>
                        <span class="text-sm text-gray-700 dark:text-gray-300 truncate flex-1">JavaScript Tips</span>
                        <button
                            class="opacity-0 group-hover:opacity-100 p-1 hover:bg-gray-200 dark:hover:bg-gray-600 rounded">
                            <svg class="w-3 h-3 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16">
                                </path>
                            </svg>
                        </button>
                    </div>

                    <div
                        class="chat-item flex items-center space-x-3 px-3 py-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 cursor-pointer group">
                        <svg class="w-4 h-4 text-gray-400 dark:text-gray-500" fill="none" stroke="currentColor"
                            viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z">
                            </path>
                        </svg>
                        <span class="text-sm text-gray-700 dark:text-gray-300 truncate flex-1">Recipe Ideas</span>
                        <button
                            class="opacity-0 group-hover:opacity-100 p-1 hover:bg-gray-200 dark:hover:bg-gray-600 rounded">
                            <svg class="w-3 h-3 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16">
                                </path>
                            </svg>
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- User Profile -->
        <div class="border-t border-gray-200 dark:border-gray-700 p-4">
            <div class="flex items-center space-x-3">
                <div
                    class="w-8 h-8 bg-gradient-to-r from-green-400 to-blue-500 rounded-full flex items-center justify-center">
                    <span class="text-white text-sm font-medium">U</span>
                </div>
                <div class="flex-1">
                    <p class="text-sm font-medium text-gray-900 dark:text-white">
                        User
                    </p>
                    <p class="text-xs text-gray-500 dark:text-gray-400">Free Plan</p>
                </div>
                <button class="p-1 hover:bg-gray-100 dark:hover:bg-gray-700 rounded">
                    <svg class="w-4 h-4 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                            d="M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z">
                        </path>
                    </svg>
                </button>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="lg:ml-64 flex flex-col h-screen">
        <!-- Header -->
        <header class="bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 px-4 py-3">
            <div class="flex items-center justify-between">
                <div class="flex items-center space-x-4">
                    <button id="menu-toggle" class="lg:hidden p-2 rounded-md hover:bg-gray-100 dark:hover:bg-gray-700">
                        <svg class="w-5 h-5 text-gray-500 dark:text-gray-400" fill="none" stroke="currentColor"
                            viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M4 6h16M4 12h16M4 18h16"></path>
                        </svg>
                    </button>
                    <h1 class="text-lg font-semibold text-gray-900 dark:text-white">
                        AI Assistant
                    </h1>
                </div>

                <div class="flex items-center space-x-3">
                    <!-- Theme Toggle -->
                    <button id="theme-toggle"
                        class="p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors">
                        <svg id="sun-icon" class="w-5 h-5 text-gray-500 dark:text-gray-400 hidden dark:block"
                            fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z">
                            </path>
                        </svg>
                        <svg id="moon-icon" class="w-5 h-5 text-gray-500 dark:text-gray-400 block dark:hidden"
                            fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z">
                            </path>
                        </svg>
                    </button>

                    <!-- Settings -->
                    <button class="p-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors">
                        <svg class="w-5 h-5 text-gray-500 dark:text-gray-400" fill="none" stroke="currentColor"
                            viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z">
                            </path>
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                        </svg>
                    </button>
                </div>
            </div>
        </header>

        <!-- Chat Area -->
        <div class="flex-1 flex flex-col">
            <!-- Welcome Screen / Chat Messages -->
            <div id="chat-container" class="flex-1 overflow-y-auto scrollbar-hide">
                <!-- Welcome Screen -->
                <div id="welcome-screen" class="flex flex-col items-center justify-center h-full px-4">
                    <div class="text-center max-w-2xl">
                        <div
                            class="w-16 h-16 bg-gradient-to-r from-blue-500 to-purple-600 rounded-2xl flex items-center justify-center mx-auto mb-6">
                            <svg class="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z">
                                </path>
                            </svg>
                        </div>
                        <h2 class="text-3xl font-bold gradient-text mb-4">
                            Hello! I'm your AI Assistant
                        </h2>
                        <p class="text-gray-600 dark:text-gray-400 text-lg mb-8">
                            I can help you with information, generate creative content,
                            solve problems, or just chat. What would you like to know today?
                        </p>

                        <!-- Suggestion Cards -->
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-8">
                            <button
                                class="suggestion-card p-4 bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 hover:border-blue-300 dark:hover:border-blue-600 transition-all duration-200 text-left group hover:shadow-lg">
                                <div class="flex items-start space-x-3">
                                    <div
                                        class="w-8 h-8 bg-blue-100 dark:bg-blue-900 rounded-lg flex items-center justify-center group-hover:bg-blue-200 dark:group-hover:bg-blue-800 transition-colors">
                                        <svg class="w-4 h-4 text-blue-600 dark:text-blue-400" fill="none"
                                            stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                d="M13 10V3L4 14h7v7l9-11h-7z"></path>
                                        </svg>
                                    </div>
                                    <div>
                                        <h3 class="font-medium text-gray-900 dark:text-white mb-1">
                                            Explain complex topics
                                        </h3>
                                        <p class="text-sm text-gray-500 dark:text-gray-400">
                                            Break down difficult concepts into simple terms
                                        </p>
                                    </div>
                                </div>
                            </button>

                            <button
                                class="suggestion-card p-4 bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 hover:border-purple-300 dark:hover:border-purple-600 transition-all duration-200 text-left group hover:shadow-lg">
                                <div class="flex items-start space-x-3">
                                    <div
                                        class="w-8 h-8 bg-purple-100 dark:bg-purple-900 rounded-lg flex items-center justify-center group-hover:bg-purple-200 dark:group-hover:bg-purple-800 transition-colors">
                                        <svg class="w-4 h-4 text-purple-600 dark:text-purple-400" fill="none"
                                            stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z">
                                            </path>
                                        </svg>
                                    </div>
                                    <div>
                                        <h3 class="font-medium text-gray-900 dark:text-white mb-1">
                                            Creative writing
                                        </h3>
                                        <p class="text-sm text-gray-500 dark:text-gray-400">
                                            Help with stories, poems, and creative content
                                        </p>
                                    </div>
                                </div>
                            </button>

                            <button
                                class="suggestion-card p-4 bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 hover:border-green-300 dark:hover:border-green-600 transition-all duration-200 text-left group hover:shadow-lg">
                                <div class="flex items-start space-x-3">
                                    <div
                                        class="w-8 h-8 bg-green-100 dark:bg-green-900 rounded-lg flex items-center justify-center group-hover:bg-green-200 dark:group-hover:bg-green-800 transition-colors">
                                        <svg class="w-4 h-4 text-green-600 dark:text-green-400" fill="none"
                                            stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4"></path>
                                        </svg>
                                    </div>
                                    <div>
                                        <h3 class="font-medium text-gray-900 dark:text-white mb-1">
                                            Code assistance
                                        </h3>
                                        <p class="text-sm text-gray-500 dark:text-gray-400">
                                            Debug, explain, and write code in any language
                                        </p>
                                    </div>
                                </div>
                            </button>

                            <button
                                class="suggestion-card p-4 bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 hover:border-orange-300 dark:hover:border-orange-600 transition-all duration-200 text-left group hover:shadow-lg">
                                <div class="flex items-start space-x-3">
                                    <div
                                        class="w-8 h-8 bg-orange-100 dark:bg-orange-900 rounded-lg flex items-center justify-center group-hover:bg-orange-200 dark:group-hover:bg-orange-800 transition-colors">
                                        <svg class="w-4 h-4 text-orange-600 dark:text-orange-400" fill="none"
                                            stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                                d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z">
                                            </path>
                                        </svg>
                                    </div>
                                    <div>
                                        <h3 class="font-medium text-gray-900 dark:text-white mb-1">
                                            Problem solving
                                        </h3>
                                        <p class="text-sm text-gray-500 dark:text-gray-400">
                                            Analyze problems and find creative solutions
                                        </p>
                                    </div>
                                </div>
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Chat Messages Container -->
                <div id="messages-container" class="hidden px-4 py-6 space-y-6">
                    <!-- Messages will be dynamically added here -->
                </div>
            </div>

            <!-- Input Area -->
            <div class="border-t border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800 p-4">
                <div class="max-w-4xl mx-auto">
                    <div class="relative">
                        <textarea id="message-input" placeholder="Message AI Assistant..."
                            class="w-full px-4 py-3 pr-12 bg-gray-50 dark:bg-gray-700 border border-gray-200 dark:border-gray-600 rounded-xl resize-none focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent text-gray-900 dark:text-white placeholder-gray-500 dark:placeholder-gray-400 chat-input"
                            rows="1"></textarea>
                        <button id="send-button"
                            class="absolute right-2 bottom-2 p-2 bg-blue-500 hover:bg-blue-600 disabled:bg-gray-300 dark:disabled:bg-gray-600 text-white rounded-lg transition-colors disabled:cursor-not-allowed"
                            disabled>
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"></path>
                            </svg>
                        </button>
                    </div>
                    <p class="text-xs text-gray-500 dark:text-gray-400 mt-2 text-center">
                        AI Assistant may produce inaccurate information about people,
                        places, or facts.
                    </p>
                </div>
            </div>
        </div>
    </div>
</body>

</html>    
 
   <script>
        // Theme Management
        const themeToggle = document.getElementById('theme-toggle');
        const html = document.documentElement;
        
        // Check for saved theme preference or default to dark
        const savedTheme = localStorage.getItem('theme') || 'dark';
        html.classList.toggle('dark', savedTheme === 'dark');
        
        themeToggle.addEventListener('click', () => {
            const isDark = html.classList.contains('dark');
            html.classList.toggle('dark', !isDark);
            localStorage.setItem('theme', !isDark ? 'dark' : 'light');
        });
        
        // Mobile Menu Management
        const menuToggle = document.getElementById('menu-toggle');
        const sidebar = document.getElementById('sidebar');
        const mobileOverlay = document.getElementById('mobile-overlay');
        const closeSidebar = document.getElementById('close-sidebar');
        
        function openSidebar() {
            sidebar.classList.remove('-translate-x-full');
            mobileOverlay.classList.remove('hidden');
        }
        
        function closeSidebarFn() {
            sidebar.classList.add('-translate-x-full');
            mobileOverlay.classList.add('hidden');
        }
        
        menuToggle.addEventListener('click', openSidebar);
        closeSidebar.addEventListener('click', closeSidebarFn);
        mobileOverlay.addEventListener('click', closeSidebarFn);
        
        // Chat Management
        const messageInput = document.getElementById('message-input');
        const sendButton = document.getElementById('send-button');
        const welcomeScreen = document.getElementById('welcome-screen');
        const messagesContainer = document.getElementById('messages-container');
        const chatContainer = document.getElementById('chat-container');
        const newChatBtn = document.getElementById('new-chat-btn');
        const suggestionCards = document.querySelectorAll('.suggestion-card');
        
        let isTyping = false;
        let messageCount = 0;
        
        // Dummy bot responses
        const botResponses = [
            "That's a great question! Let me help you with that. Machine learning is essentially a way for computers to learn patterns from data without being explicitly programmed for every scenario.",
            "I'd be happy to explain that concept! Think of it like teaching a child - instead of giving them rules for every situation, you show them examples and let them figure out the patterns.",
            "Interesting topic! Here's how I would approach this: First, we need to understand the fundamentals, then we can build upon that knowledge step by step.",
            "That's a fascinating question that many people wonder about. The key is to break it down into smaller, manageable parts that are easier to understand.",
            "Great point! This is actually a common challenge that developers face. Let me walk you through a practical solution that you can implement right away.",
            "I love questions like this! It shows you're thinking deeply about the subject. Here's my perspective on this topic...",
            "That's exactly the kind of problem-solving mindset that leads to great solutions! Let me share some insights that might help you.",
            "Excellent question! This touches on some really important concepts. Let me explain it in a way that makes it crystal clear."
        ];
        
        // Auto-resize textarea
        messageInput.addEventListener('input', function() {
            this.style.height = 'auto';
            this.style.height = Math.min(this.scrollHeight, 120) + 'px';
            
            // Enable/disable send button
            sendButton.disabled = this.value.trim() === '';
        });
        
        // Send message on Enter (but allow Shift+Enter for new lines)
        messageInput.addEventListener('keydown', function(e) {
            if (e.key === 'Enter' && !e.shiftKey) {
                e.preventDefault();
                sendMessage();
            }
        });
        
        // Send button click
        sendButton.addEventListener('click', sendMessage);
        
        // New chat button
        newChatBtn.addEventListener('click', startNewChat);
        
        // Suggestion cards
        suggestionCards.forEach(card => {
            card.addEventListener('click', function() {
                const title = this.querySelector('h3').textContent;
                const description = this.querySelector('p').textContent;
                const message = `Can you help me with ${title.toLowerCase()}? ${description}`;
                messageInput.value = message;
                sendMessage();
            });
        });
        
        function sendMessage() {
            const message = messageInput.value.trim();
            if (!message || isTyping) return;
            
            // Hide welcome screen and show messages
            if (welcomeScreen.style.display !== 'none') {
                welcomeScreen.style.display = 'none';
                messagesContainer.classList.remove('hidden');
            }
            
            // Add user message
            addMessage(message, 'user');
            
            // Clear input
            messageInput.value = '';
            messageInput.style.height = 'auto';
            sendButton.disabled = true;
            
            // Show typing indicator and simulate bot response
            setTimeout(() => {
                showTypingIndicator();
                setTimeout(() => {
                    hideTypingIndicator();
                    const randomResponse = botResponses[Math.floor(Math.random() * botResponses.length)];
                    addMessage(randomResponse, 'bot');
                }, 1500 + Math.random() * 2000); // Random delay between 1.5-3.5 seconds
            }, 500);
        }
        
        function addMessage(content, sender) {
            messageCount++;
            const messageDiv = document.createElement('div');
            messageDiv.className = `message-animation flex ${sender === 'user' ? 'justify-end' : 'justify-start'} mb-4`;
            
            const isBot = sender === 'bot';
            const avatarBg = isBot ? 'from-blue-500 to-purple-600' : 'from-green-400 to-blue-500';
            const avatarIcon = isBot ? 
                `<svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"></path>
                </svg>` :
                `<span class="text-white text-xs font-medium">U</span>`;
            
            messageDiv.innerHTML = `
                <div class="flex ${sender === 'user' ? 'flex-row-reverse' : 'flex-row'} items-start space-x-3 max-w-3xl">
                    <div class="w-8 h-8 bg-gradient-to-r ${avatarBg} rounded-full flex items-center justify-center flex-shrink-0 ${sender === 'user' ? 'ml-3' : ''}">
                        ${avatarIcon}
                    </div>
                    <div class="flex-1">
                        <div class="bg-${sender === 'user' ? 'blue-500 text-white' : 'white dark:bg-gray-800 text-gray-900 dark:text-white'} rounded-2xl px-4 py-3 ${sender === 'user' ? 'rounded-br-md' : 'rounded-bl-md'} shadow-sm border ${sender === 'user' ? 'border-blue-500' : 'border-gray-200 dark:border-gray-700'}">
                            <p class="text-sm leading-relaxed whitespace-pre-wrap">${content}</p>
                        </div>
                        <div class="text-xs text-gray-500 dark:text-gray-400 mt-1 ${sender === 'user' ? 'text-right' : 'text-left'}">
                            ${new Date().toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})}
                        </div>
                    </div>
                </div>
            `;
            
            messagesContainer.appendChild(messageDiv);
            scrollToBottom();
            
            // Update chat history (simulate)
            if (messageCount === 1) {
                updateChatHistory(content.substring(0, 30) + (content.length > 30 ? '...' : ''));
            }
        }
        
        function showTypingIndicator() {
            if (isTyping) return;
            isTyping = true;
            
            const typingDiv = document.createElement('div');
            typingDiv.id = 'typing-indicator';
            typingDiv.className = 'flex justify-start mb-4';
            typingDiv.innerHTML = `
                <div class="flex items-start space-x-3 max-w-3xl">
                    <div class="w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center flex-shrink-0">
                        <svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"></path>
                        </svg>
                    </div>
                    <div class="bg-white dark:bg-gray-800 rounded-2xl rounded-bl-md px-4 py-3 shadow-sm border border-gray-200 dark:border-gray-700">
                        <div class="flex space-x-1">
                            <div class="typing-indicator"></div>
                            <div class="typing-indicator"></div>
                            <div class="typing-indicator"></div>
                        </div>
                    </div>
                </div>
            `;
            
            messagesContainer.appendChild(typingDiv);
            scrollToBottom();
        }
        
        function hideTypingIndicator() {
            const typingIndicator = document.getElementById('typing-indicator');
            if (typingIndicator) {
                typingIndicator.remove();
            }
            isTyping = false;
        }
        
        function scrollToBottom() {
            chatContainer.scrollTo({
                top: chatContainer.scrollHeight,
                behavior: 'smooth'
            });
        }
        
        function startNewChat() {
            messagesContainer.innerHTML = '';
            messagesContainer.classList.add('hidden');
            welcomeScreen.style.display = 'flex';
            messageCount = 0;
            isTyping = false;
        }
        
        function updateChatHistory(title) {
            const chatHistory = document.getElementById('chat-history');
            const newChatItem = document.createElement('div');
            newChatItem.className = 'chat-item flex items-center space-x-3 px-3 py-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 cursor-pointer group';
            newChatItem.innerHTML = `
                <svg class="w-4 h-4 text-gray-400 dark:text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
                </svg>
                <span class="text-sm text-gray-700 dark:text-gray-300 truncate flex-1">${title}</span>
                <button class="opacity-0 group-hover:opacity-100 p-1 hover:bg-gray-200 dark:hover:bg-gray-600 rounded">
                    <svg class="w-3 h-3 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
                    </svg>
                </button>
            `;
            
            // Insert at the beginning of chat history
            chatHistory.insertBefore(newChatItem, chatHistory.firstChild);
        }
        
        // Scroll to bottom button (appears when user scrolls up)
        let scrollToBottomBtn = null;
        
        function createScrollToBottomButton() {
            scrollToBottomBtn = document.createElement('button');
            scrollToBottomBtn.className = 'fixed bottom-24 right-6 w-10 h-10 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-full shadow-lg hover:shadow-xl transition-all duration-200 flex items-center justify-center opacity-0 pointer-events-none z-10';
            scrollToBottomBtn.innerHTML = `
                <svg class="w-5 h-5 text-gray-600 dark:text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"></path>
                </svg>
            `;
            
            scrollToBottomBtn.addEventListener('click', scrollToBottom);
            document.body.appendChild(scrollToBottomBtn);
        }
        
        function toggleScrollToBottomButton() {
            if (!scrollToBottomBtn) createScrollToBottomButton();
            
            const isAtBottom = chatContainer.scrollTop + chatContainer.clientHeight >= chatContainer.scrollHeight - 100;
            const hasMessages = !messagesContainer.classList.contains('hidden');
            
            if (!isAtBottom && hasMessages) {
                scrollToBottomBtn.classList.remove('opacity-0', 'pointer-events-none');
                scrollToBottomBtn.classList.add('opacity-100', 'pointer-events-auto');
            } else {
                scrollToBottomBtn.classList.add('opacity-0', 'pointer-events-none');
                scrollToBottomBtn.classList.remove('opacity-100', 'pointer-events-auto');
            }
        }
        
        // Listen for scroll events
        chatContainer.addEventListener('scroll', toggleScrollToBottomButton);
        
        // Add initial bot message when page loads
        window.addEventListener('load', function() {
            // Small delay to ensure everything is loaded
            setTimeout(() => {
                // You can uncomment this if you want an initial bot message
                // addMessage("Hello! I'm your AI Assistant. I can help you with information, generate creative content, solve problems, or just chat. What would you like to know today?", 'bot');
            }, 1000);
        });
        
        // Handle chat history item clicks
        document.addEventListener('click', function(e) {
            if (e.target.closest('.chat-item')) {
                // Simulate loading a previous chat
                startNewChat();
                setTimeout(() => {
                    addMessage("This is a previous conversation that would be loaded from your chat history.", 'user');
                    setTimeout(() => {
                        addMessage("Here's where the previous AI response would appear. In a real implementation, this would load the actual conversation from your database.", 'bot');
                    }, 1000);
                }, 500);
            }
        });
    </script>
</body>
</html>